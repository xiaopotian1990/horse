server:
  port: 8761

spring:
  security:
    user:
      name: admin
      password: admin
  application:
    name: @artifactId@
  cloud:
    config:
      enabled: false
# docker-compose部署时候 hostname 换成horse-eureka
# 类似的 redis 使用redis ,gateway 换成 horse-gateway
eureka:
  instance:
    hostname: horse-eureka
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5 # Eureka Client 向 Eureka Server发送心跳得时间间隔，默认值30
    # 制定Eureka Client间隔多久需要向 Eureka Server发送心跳来告知Eureka Server该实例还存活.
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
    # 如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
    # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉
    # 该值至少应该大于leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 10
  client:
    # 轮询Eureka服务端地址更改的时间间隔，单位为秒，当于Spring Cloud Config配合，动态刷新Eureka的serviceURL地址时需要关注该参数
    eureka-service-url-poll-interval-seconds: 5
    # 复制实例变化信息到eureka服务器所需要的时间间隔（s），默认为30秒
    initial-instance-info-replication-interval-seconds: 5
    register-with-eureka: false #是否将应用实例注册到eureka。
    fetch-registry: false
    service-url:
      defaultZone: http://admin:admin@${eureka.instance.hostname}:${server.port}/eureka/
    # CacheRefreshThread线程的调度频率，表示eureka client间隔多久去拉取服务注册信息，默认为30秒，
    # 对于api-gateway，如果要迅速获取服务注册状态，可以缩小该值，比如5秒
    registry-fetch-interval-seconds: 5
  server:
    eviction-interval-timer-in-ms: 4000 #制定EvictionTask定时任务的调度频率，用于剔除过期的实例
    # 是否开启自我保护模式，生产环境要打开，默认true。当Eureka Server节点在短时间内丢失过多客户端时（可能发生了网络分区故障），那么这个节点就会进入自我保护模式
    enable-self-preservation: false
    renewal-percent-threshold: 0.49 #指定每分钟收到的续约次数的阈值 默认值0.85
    # 只读缓存更新频率，单位：毫秒。只读缓存定时更新任务只更新读取过请求 ，因此虽然永不过期，也会存在读取不到的情况。
    response-cache-update-interval-ms: 5000
management:
  endpoints:
    web:
      exposure:
        include: '*'

